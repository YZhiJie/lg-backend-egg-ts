name: 自动部署新版本到服务器
# 在特定 tag 被 push 以后被触发
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  publish-release:
    # 运行的操作系统
    runs-on: ubuntu-latest
    steps:
      # checkout 代码
      # https://github.com/marketplace/actions/checkout
      - uses: actions/checkout@v4
      # 创建 env 文件
      # build docker image
      # start the app
      - name: 'create env file'
        run: |
          touch .env
          echo ALI_ACCCESS_KEY=${{ secrets.ALI_ACCESS_KEY }} >> .env
          echo ALI_ACCCESS_KEY_SECRET=${{ secrets.ALI_SECRET_KEY }} >> .env
          echo GITEE_CID=${{ secrets.GITEE_CID }} >> .env
          echo GITEE_SECRET=${{ secrets.GITEE_SECRET }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env
          echo MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }} >> .env
          echo MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }} >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
      # 使用阿里云ACR 完成 docker login 
      - name: Login to Aliyun Container Registry (ACR)
        # https://github.com/marketplace/actions/alibaba-cloud-container-registry-acr-login
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-guangzhou.aliyuncs.com
          region-id: cn-hangzhou
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      # 使用正确的 github tag 对应 ACR tag 进行 docker build
      - name: Build image for ACR docker
        run: docker build --tag "registry.cn-guangzhou.aliyuncs.com/coderyzj/lego:${{github.ref_name}}" .
      # 使用标记的 tag 进行 push
      - name: Push Image to ACR
        run: docker push registry.cn-guangzhou.aliyuncs.com/coderyzj/lego:${{github.ref_name}} 
      # 查找 docker-compose-online 文件 并且完成版本替换
      - name: Find and Replace
        # https://github.com/marketplace/actions/find-and-replace
        uses: jacobtomlinson/gha-find-replace@v3
        with: 
          find: "{{tag}}"
          replace: ${{github.ref_name}}
          include: "docker-compose-online.yml"
      - run: cat docker-compose-online.yml
      # 拷贝必须文件到一个文件夹，包括 .env, docker-compose-online.yml, mongo-entrypoint
      - name: 'copy necessary files in to one folder'
        run: |
          mkdir lego-backend 
          cp .env docker-compose-online.yml lego-backend
          cp -r mongo-entrypoint lego-backend
          ls -a lego-backend
      # 通过 scp 拷贝必须文件到服务器
      - name: 'copy lego-backend folder via scp'
        # https://github.com/appleboy/scp-action
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          source: 'lego-backend'
          target: '~'
      # 通过 SSH 登录然后重启服务
      - name: executing ssh and restart docker
        # https://github.com/marketplace/actions/ssh-remote-commands
        # action 作用：远程登陆主机，执行一些脚本
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          # 执行 script 遇到错误时，停止继续向下执行
          script_stop: true
          # * 登录阿里云 ACR
          # 停止服务 docker-compose down
          # 启动服务 docker-compose up 
          # 清理工作
          script: |
            docker login --username=${{secrets.ACR_USERNAME}} --password=${{secrets.ACR_PASSWORD}} registry.cn-guangzhou.aliyuncs.com
            cd ~/lego-backend/
            docker-compose -f docker-compose-online.yml down
            docker-compose -f docker-compose-online.yml up -d
            rm -rf .env
            docker logout registry.cn-guangzhou.aliyuncs.com 